{"version":3,"sources":["firebaseConfig/index.js","components/Games/Games.jsx","components/Point/Point.jsx","components/Stone/Stone.jsx","components/GameBoard/GameBoard.jsx","pages/App/App.js","serviceWorker.js","index.js","components/Point/Point.module.css","pages/App/App.module.scss","components/GameBoard/GameBoard.module.css","pages/App/img/go.png","components/Stone/Stone.module.css"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Games","props","react_default","a","createElement","Point","className","styles","square","onClick","handlePointClick","pos","nw","ne","sw","se","Stone","difficulty","easy","height","width","medium","go","tactInfo","piece","chainId","openLinks","topIff","rightIff","bottomIff","leftIff","GameBoard","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","boardGen","num","tempBoardPoints","tempBoardPointsTact","i","push","components_Point_Point","setState","boardPointsTact","boardPoints","stonesCount","whiteReserves","gameDiff","blackReserves","handleTurnChange","state","playerTurn","waitingPlayer","boardRender","e","map","obj","components_Stone_Stone","handleChainLinks","pointTact","mergeChains","tempPointTact","length","cId","ob","currentChain","handleTactChange","tempPointData","toptIff","preventDefault","target","myColor","prevBoardPointsTact","chains","elapsedTime","turnCount","isTiming","whiteCaptures","blackCaptures","turnData","style","Component","App","timers","user","username","isGame","isAuthenticated","handleLogin","provider","auth","GoogleAuthProvider","signInWithPopup","then","result","displayName","console","log","catch","error","message","handleLogout","signOut","handleGame","value","_this2","onAuthStateChanged","firebaseUser","_app","_sidebar","_user","_button","_main","_board","components_GameBoard_GameBoard","_game","components_Games_Games","_landing","alt","src","_para","href","Boolean","window","location","hostname","match","ReactDOM","render","pages_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","White","Black","outer_board","__webpack_require__","p"],"mappings":"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","file":"static/js/main.8f59f33b.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/database'\r\nimport 'firebase/auth'\r\n\r\nvar config = {\r\n   apiKey: \"AIzaSyA3adSr3gKePH7J07FjS_SZVvpXAjyYQno\",\r\n   authDomain: \"go-react-alphabeta.firebaseapp.com\",\r\n   databaseURL: \"https://go-react-alphabeta.firebaseio.com\",\r\n   projectId: \"go-react-alphabeta\",\r\n   storageBucket: \"go-react-alphabeta.appspot.com\",\r\n   messagingSenderId: \"947800282985\"\r\n }\r\n\r\nfirebase.initializeApp(config)\r\n\r\nexport default firebase\r\n","import React from 'react'\r\n\r\nconst Games = props => {\r\n  return (\r\n    <div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Games\r\n","import React from 'react'\r\nimport styles from './Point.module.css'\r\n\r\nconst Point = props => {\r\n  return (\r\n    <div className={styles.square} onClick={props.handlePointClick} pos={props.pos}>\r\n      <div className={styles.nw}></div>\r\n      <div className={styles.ne}></div>\r\n      <div className={styles.sw}></div>\r\n      <div className={styles.se}></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Point\r\n","import React from 'react'\r\nimport styles from './Stone.module.css'\r\n\r\n// Traditionaly the black stones are slightly larger than the white\r\n\r\nconst Stone = props => {\r\n  return (\r\n    <div className={styles.Stone}>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Stone\r\n","import React, {Component} from 'react'\r\nimport Point from '../Point/Point'\r\nimport Stone from '../Stone/Stone'\r\nimport styles from './GameBoard.module.css'\r\n\r\nconst difficulty = { // Subtract one from the last number when used to set the white reserves\r\n  easy: [81, {height: 324, width: 324}, 41],\r\n  medium: [169, {height: 468, width: 468}, 85],\r\n  go: [361, {height: 684, width: 684}, 181]\r\n}\r\n\r\nconst tactInfo = {\r\n  piece: \"free\",   // Either black or white\r\n  chainId: null,   // corresponds to all the stones in a single chain\r\n  openLinks: null, // number up to three, corresponds to the amount of trues in the Iff's Might need to get rid of this in favor of a more efficent operation\r\n  topIff: null,\r\n  rightIff: null,\r\n  bottomIff: null,\r\n  leftIff: null\r\n}\r\n\r\nclass GameBoard extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      playerTurn: \"black\", // Black always initiates the game\r\n      waitingPlayer: \"white\",\r\n      myColor: \"\",\r\n      boardPoints: [],     // This is the array that will contain all the <Point /> elements to be rendered, I do not think that this should be used after it is first used, I think\r\n      boardPointsTact: {}, // This is the information for every square which all have a copy of tactInfo in them\r\n      prevBoardPointsTact: {},\r\n      chains: [],\r\n      currentChain: 0,\r\n      elapsedTime: 0,\r\n      turnCount: 0,\r\n      isTiming: true,\r\n      stonesCount: {\r\n        whiteCaptures: 0,\r\n        whiteReserves: null,\r\n        blackCaptures: 0,\r\n        blackReserves: null\r\n      },\r\n      turnData: []\r\n    }\r\n    // this.handlePointClick = this.handlePointClick.bind(this)\r\n  }\r\n\r\n  boardGen = num => { // For initialization of the board only\r\n    let tempBoardPoints = []\r\n    let tempBoardPointsTact = {}\r\n    for (let i = 0; i < num; i++) {\r\n      tempBoardPointsTact[i] = tactInfo\r\n      tempBoardPoints.push(<Point handlePointClick={this.handlePointClick} pos={i} />)\r\n    }\r\n    this.setState({\r\n      boardPointsTact: tempBoardPointsTact,\r\n      boardPoints: tempBoardPoints,\r\n      stonesCount: {\r\n        whiteReserves: (difficulty[this.props.gameDiff][2] - 1),\r\n        blackReserves: difficulty[this.props.gameDiff][2]}\r\n    })\r\n  }\r\n\r\n  handleTurnChange = () => {\r\n    if (this.state.playerTurn === \"black\") {\r\n      this.setState({playerTurn: \"white\", waitingPlayer: \"black\"})\r\n    } else {\r\n      this.setState({playerTurn: \"black\", waitingPlayer: \"white\"})\r\n    }\r\n  }\r\n\r\n  boardRender = e => {\r\n    let tempBoardPointsTact = this.state.boardPointsTact\r\n    let tempBoardPoints = this.state.boardPoints\r\n\r\n    tempBoardPointsTact.map(obj => {\r\n      for (let i = 0; i < difficulty[this.props.gameDiff][0]; i++) {\r\n        if (obj[i].piece !== \"free\") {\r\n           tempBoardPoints[i] = <Point onClick={this.handlePointClick} pos={i}><Stone className={styles[obj.piece]} /></Point>\r\n        }\r\n      }\r\n    })\r\n    this.setState({boardPointsTact: tempBoardPointsTact, boardPoints: tempBoardPoints})\r\n  }\r\n\r\n  handleChainLinks = (pointTact, pos) => {\r\n\r\n    let mergeChains = []\r\n    let tempBoardPointsTact = this.state.boardPointsTact\r\n    let tempPointTact = pointTact // This is just the object of the single point clicked where a piece should be placed\r\n\r\n    // Finding any friendly chains, then pushing them to the above array\r\n    if (this.state.boardPointsTact[pos - 1].piece === this.state.playerTurn) {\r\n      mergeChains.push(this.state.boardPointsTact[pos - 1].chainId)\r\n    }\r\n    if (this.state.boardPointsTact[pos - 19].piece === this.state.playerTurn) {\r\n      mergeChains.push(this.state.boardPointsTact[pos - 19].chainId)\r\n    }\r\n    if (this.state.boardPointsTact[pos + 1].piece === this.state.playerTurn) {\r\n      mergeChains.push(this.state.boardPointsTact[pos + 1].chainId)\r\n    }\r\n    if (this.state.boardPointsTact[pos + 19].piece === this.state.playerTurn) {\r\n      mergeChains.push(this.state.boardPointsTact[pos + 19].chainId)\r\n    }\r\n\r\n    if (mergeChains.length > 1) {\r\n      // convert all links to have the same chainId then delete all the\r\n      // old links from a copy of the chainId array, then replace the old with the new chainId\r\n      mergeChains.map(cId => {\r\n        tempBoardPointsTact.map(ob => {\r\n          if (ob.chainId === cId) ob.chainId = this.state.currentChain + 1\r\n        })\r\n      })\r\n\r\n      this.setState({currentChain: this.state.currentChain + 1, boardPointsTact: tempPointTact})\r\n      return tempPointTact\r\n    } else if (mergeChains.length === 1) {\r\n      tempPointTact.chainId = mergeChains[0]\r\n      return tempPointTact\r\n    }\r\n  }\r\n\r\n  handleTactChange = (pointTact, pos) => { // point represents an object holding all the tact data\r\n    // Check surrounding areas links etc to determine how the state of the tactInfo should change\r\n    let tempPointData = this.state.boardPointsTact[pos]\r\n\r\n    // Setting the IFF's below\r\n    pos - 1 < 0    ? tempPointData.rightIff  = this.state.waitingPlayer : tempPointData.rightIff  = this.state.boardPointsTact[pos - 1].piece\r\n    pos - 19 < 0   ? tempPointData.toptIff   = this.state.waitingPlayer : tempPointData.topIff    = this.state.boardPointsTact[pos - 19].piece\r\n    pos + 1 > 360  ? tempPointData.leftIff   = this.state.waitingPlayer : tempPointData.leftIff   = this.state.boardPointsTact[pos + 1].piece\r\n    pos + 19 > 360 ? tempPointData.bottomIff = this.state.waitingPlayer : tempPointData.bottomIff = this.state.boardPointsTact[pos + 19].piece\r\n\r\n    if (tempPointData.rightIff === this.state.playerTurn ||\r\n        tempPointData.leftIff === this.state.playerTurn ||\r\n        tempPointData.topIff === this.state.playerTurn ||\r\n        tempPointData.bottomIff === this.state.playerTurn) {\r\n      this.handleChainLinks(tempPointData, pos)\r\n    } else {\r\n      tempPointData.chainId = this.state.currentChain + 1\r\n      this.setState({currentChain: this.state.currentChain + 1})\r\n      return tempPointData\r\n    }\r\n  }\r\n\r\n  handlePointClick = (e) => { // Function that is triggered on click of a div where a go piece is placeable\r\n    e.preventDefault()\r\n    if (e.target.piece === \"black\" || e.target.piece === \"white\") return\r\n    let tempBoardPoints = this.state.boardPoints\r\n    let tempBoardPointsTact = this.state.boardPointsTact\r\n    tempBoardPointsTact[e.target.pos] = this.handleTactChange(tempBoardPointsTact[e.target.pos], e.target.pos)\r\n    // this.setState({boardPointsTact: tempBoardPointsTact, boardPoints: tempBoardPoints})\r\n    this.handleTurnChange()\r\n    this.boardRender()\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.boardGen(difficulty[this.props.gameDiff][0])\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={difficulty[this.props.gameDiff][1]} className={styles.GameBoard}>\r\n        {\r\n          this.state.boardPoints\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GameBoard\r\n","import React, { Component } from 'react'\nimport firebase from '../../firebaseConfig'\nimport styles from  './App.module.scss'\nimport './App.fonts.scss'\nimport go from '../../pages/App/img/go.png'\nimport Games from '../../components/Games/Games'\nimport GameBoard from '../../components/GameBoard/GameBoard'\n\nclass App extends Component {\n\n  state = {\n    timers: {},\n    user: null,\n    username: null,\n    gameDiff: \"\",\n    isGame: false,\n    isAuthenticated: false\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(firebaseUser => {\n      firebaseUser ?\n        this.setState({\n          user: firebaseUser.displayName,\n          isAuthenticated: true\n        })\n        :\n        this.setState({\n          user: null,\n          isAuthenticated: false\n        })\n    })\n  }\n\n  handleLogin = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    firebase.auth().signInWithPopup(provider)\n    .then(result => {\n      this.setState({username: result.displayName})\n      console.log(\"User Logged In Successfully\", this.state.user)\n    })\n    .catch(error => {\n      console.log(\"Something Went Wrong: \", error.message)\n    })\n    // Create user with email for reuse and name for display\n  }\n\n  handleLogout = () => {\n    firebase.auth().signOut()\n    .then(() => {\n      console.log(\"User logged out successfully\")\n    })\n    .catch(error => {console.log(\"Something went wrong: \", error.message)})\n  }\n\n  handleGame = e => {\n    e.preventDefault()\n    this.setState({gameDiff: e.target.value})\n    !this.state.isGame ? this.setState({isGame: true}) : this.setState({isGame: false})\n  }\n\n  render() {\n    return (\n      <div className={styles._app}>\n        <div className={styles._sidebar}> {/*Sidebar*/}\n          <h1>GO</h1>\n          <div className={styles._user}>{this.state.user}</div>\n          <div>\n            <button className={styles._button} onClick={this.state.isAuthenticated ? this.handleLogout : this.handleLogin}>{this.state.isAuthenticated ? <span>Logout</span> : <span>Login</span>}</button>\n          </div>\n          {\n            this.state.isAuthenticated && !this.state.isGame ?\n            <div>\n              <div>Start a new game</div>\n              <button className={styles._button} value=\"easy\" onClick={this.handleGame}>Easy</button>\n              <button className={styles._button} value=\"medium\" onClick={this.handleGame}>Medium</button>\n              <button className={styles._button} value=\"go\" onClick={this.handleGame}>Go</button>\n            </div>\n            :\n            !this.state.isAuthenticated ? <div>Login to start a new game</div> : <div>{/*Create a react component for the stats of the game or similar info*/}</div>\n          }\n        </div> {/* End Sidebar*/}\n        <div className={styles._main}>\n          {\n            this.state.isAuthenticated ?\n            <div className={styles._board}>\n              {\n                this.state.isGame ?\n                <GameBoard gameDiff={this.state.gameDiff} user={this.state.user} className={styles._game} />\n                :\n                <Games />\n              }\n            </div>\n            :\n            <div className={styles._landing}>\n              <img alt={\"A small go board\"} src={go} />\n              <p className={styles._para}>Go is one of the oldest board games played by humankind.\n                It has stood the test of time and to this day remains of the most popular and challenging games of strategy.\n                Originating in the Zhou dynasty of 1046-256 BC, it is quite possibly the oldest continuously played board games on Earth.\n                I recommend that you read about it on wikipedia here. <a href={\"https://en.wikipedia.org/wiki/Go_(game)\"}>Go Wiki Page</a>\n              </p>\n            </div>\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App\n\n// -.. .----. .- -. --. . .-.. --- / -- .- .-.. -.-. --- .-.. -- / ... .... .- -.- ..- .-.\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './pages/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"square\":\"Point_square__2g__y\",\"nw\":\"Point_nw__13zAV\",\"ne\":\"Point_ne__25AV8\",\"sw\":\"Point_sw__2Leo4\",\"se\":\"Point_se__2DVoE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"_app\":\"App__app__Kn216\",\"_sidebar\":\"App__sidebar__1wvAE\",\"_landing\":\"App__landing__JZLFP\",\"_main\":\"App__main__3cyjp\",\"_button\":\"App__button__k2DM3\",\"_user\":\"App__user__2lNUN\",\"_para\":\"App__para__3P3i6\",\"_game\":\"App__game__1IE3c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GameBoard\":\"GameBoard_GameBoard__Z03nT\",\"White\":\"GameBoard_White__1T_pI\",\"Black\":\"GameBoard_Black__2ze2o\",\"outer_board\":\"GameBoard_outer_board__2MdoP\"};","module.exports = __webpack_public_path__ + \"static/media/go.4c850590.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"White\":\"Stone_White__jVRmy\",\"Black\":\"Stone_Black__1O17h\"};"],"sourceRoot":""}